// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @unique @default(uuid())
  refreshToken String   @default(uuid()) @db.Text
  isBlocked    Boolean  @default(false)
  createdAt    DateTime @default(now())
  expiredAt    DateTime
  admin        Admin   @relation(fields: [adminId], references: [id], onDelete: Cascade)
  adminId      String
}

model VerifyEmail {
  id         String   @id @unique @default(uuid())
  email      String
  secretCode String
  isUsed     Boolean  @default(false)
  createdAt  DateTime @default(now())
  expiredAt  DateTime
  admin      Admin   @relation(fields: [adminId], references: [id], onDelete: Cascade)
  adminId    String
}

model Admin {
  id              String        @id @unique @default(uuid())
  fullName        String
  image           String?       @unique
  hashedPassword  String
  email           String        @unique
  isEmailVerified Boolean       @default(false)
  isBlocked       Boolean       @default(true)
  createdAt       DateTime      @default(now())
  sessions        Session[]
  verifyEmails    VerifyEmail[]
  courses         Course[]
}

model Course {
  id            Int      @id @unique @default(autoincrement())
  slug          String   @unique
  title         String   @unique
  description   String?  @db.VarChar(3000)
  image         String?
  createdAt     DateTime @default(now())
  parts         Part[]
  admin         Admin?    @relation(fields: [adminId], references: [id])
  adminId       String?
}

model Part {
  id                Int      @id @unique @default(autoincrement())
  slug              String   @unique
  title             String   @unique
  url               String   
  index             Int
  createdAt         DateTime @default(now())
  course            Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId          Int
}



model Banner {
  bannerId         Int      @id @unique @default(autoincrement())
  image             String
  bannerUrl        String?
}

